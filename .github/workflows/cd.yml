name: CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: ["3.10.4"]
    steps:
      - uses: actions/checkout@v3
      #----------------------------------------------
      #           install & configure poetry
      #----------------------------------------------
      - name: Install Poetry
        run: |
          pipx install poetry==1.1.13
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry config installer.parallel true
      #----------------------------------------------
      #               setup-python@v3
      #----------------------------------------------
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      #----------------------------------------------
      #             install dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: |
          poetry shell
          python -V
          make settings env=ci
          make ci-secrets
          pytest -n auto -vv
      - name: Set author to slack id mapping
        uses: kanga333/variable-mapper@master
        if: always()
        with:
          key: "${{ github.actor }}"
          map: |
            {
              "mridula-plivo": {
                "slack_member_id": "U02Q519GH60"
              },
              "amalshaji-plivo": {
                "slack_member_id": "U02L11HCV6F"
              },
              "sushant-plivo": {
                "slack_member_id": "U02QF8RQY0G"
              },
              "lalith-plivo": {
                "slack_member_id": "U02QAGRV6GH"
              },
              "gautham-plivo": {
                "slack_member_id": "U02KLGYQP2B"
              }
            }
      - name: Send slack notification on PR
        if: always() && github.event_name == 'pull_request'
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          message_format: "{workflow} {status_message} on PR <https://github.com/{repo}/pull/${{ github.event.pull_request.number }}|#${{ github.event.pull_request.number }} ${{  github.event.pull_request.title }}>. Commit <{commit_url}|{commit_sha}>."
          notification_title: "{emoji} {workflow} {status_message}"
          mention_users: ${{ env.slack_member_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOKS_ENGG }}
      - name: Send slack notification on merge
        if: always() && github.event_name == 'push'
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: success,failure
          message_format: "{workflow} {status_message} on merge to main. Commit <{commit_url}|{commit_sha}>."
          notification_title: "{emoji}{emoji} {workflow} {status_message}"
          mention_users: ${{ env.slack_member_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOKS_ENGG }}
